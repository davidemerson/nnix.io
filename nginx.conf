worker_processes  1;

events {
       worker_connections  1024;
}
http {
       map $http_upgrade $connection_upgrade { 
       default upgrade;
       ''      close;
       }
       server_names_hash_bucket_size  128;
       include       mime.types;
       default_type  application/octet-stream;
       sendfile        on;
       keepalive_timeout  65;

server {
    server_name nnix.io; 

    listen 443 ssl; 

    ssl_certificate /etc/letsencrypt/live/nnix.io/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/nnix.io/privkey.pem; 
#    include /etc/letsencrypt/options-ssl-nginx.conf; 
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

    location / {
        proxy_pass http://localhost:8008; 
        proxy_set_header Host $host; 
        proxy_set_header X-Forwarded-Host $host; 
        proxy_set_header X-Forwarded-For $remote_addr:$remote_port; 
        proxy_set_header X-Forwarded-Proto $scheme; 
        # for websocket
        proxy_http_version 1.1; 
        proxy_set_header Upgrade $http_upgrade; 
        # requires a $connection_upgrade definition in /etc/nginx/nginx.conf
        # see https://futurestud.io/tutorials/nginx-how-to-fix-unknown-connection_upgrade-variable
        proxy_set_header Connection $connection_upgrade; 
    }
}

# this server uses the (same) wildcard cert as the one above but uses a regular expression on the hostname
# which extracts the first subdomain which holds the alias and forwards that to the prox_pass server

server {
    server_name "~^(?<alias>\w+)\.nnix\.io$";

    listen 443 ssl; 

    ssl_certificate /etc/letsencrypt/live/nnix.io/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/nnix.io/privkey.pem; 
#   include /etc/letsencrypt/options-ssl-nginx.conf; 
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 
       }

    location = / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        # "rewrite" requests with subdomains to the non-wildcard url for alias resolving
        # $is_args$args pass on ?encoding=json if present
        proxy_pass http://localhost:8008/alias/$alias$is_args$args;
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://localhost:8008;
    }
}

server {
    if ($host ~ nnix.io$ ) {
        return 301 https://$host$request_uri;
    }

    listen 80 default_server;
    listen [::]:80 default_server;
    server_name nnix.io;
    return 404; 
}